from wasmtime import Config, Store, Engine, Module, FuncType, Func, ValType, Instance, Limits, MemoryType, Global, GlobalType, Val, Memory, Table, TableType
from functools import partial
import numpy as np
from services.wasmbase import wasm_base

class wasm(wasm_base):
    def __init__(self, wasmfile= "testing/js_testing/test6.wasm"):
        super().__init__()
    
        self.wasmfile = wasmfile
        self.config = Config()
        self.config.wasm_multi_value = True
        self.engine = Engine()

        # Load the Wasm module
        self.wasm_module = Module.from_file(self.engine, wasmfile)
        self.store = Store(self.engine)
        # Create memory
        limits = Limits(512, None)  # Replace None with maximum size if needed
        memory_type = MemoryType(limits)
        self.memory = Memory(self.store, memory_type)

        # Create table
        limits = Limits(181773, 181773)
        table_type = TableType(ValType.funcref(), limits)
        table = Table(self.store, table_type, None)

        mutable = False  # Mutable
        global_type32 = GlobalType(ValType.i32(), mutable)
        global_type64 = GlobalType(ValType.f64(), mutable)
        # Create globals
        self.global_tableBase = Global(self.store, global_type32, Val.i32(0))
        self.global_DYNAMICTOP_PTR = Global(self.store, global_type32, Val.i32(self.DYNAMICTOP_PTR))
        self.global_STACKTOP = Global(self.store, global_type32, Val.i32(self.STACKTOP))
        self.global_STACK_MAX = Global(self.store, global_type32, Val.i32(self.STACK_MAX))
        
        self.init_base_func()
        
        wasm_args = [self.memory, 
                table, 
                self.global_tableBase,
                self.global_DYNAMICTOP_PTR,
                self.global_STACKTOP,
                self.global_STACK_MAX,
                Global(self.store, global_type64, Val.f64(float('nan'))),
                Global(self.store, global_type64, Val.f64(float('inf'))),
                Func(self.store, FuncType([ValType.f64(), ValType.f64()], [ValType.f64()]), pow),
                ] + list(self.import_object['env'].values())

        self.instance = Instance(self.store, self.wasm_module, wasm_args)

        # to get salt
        self.decryption = partial(self.instance.exports(self.store)["_decryption"], self.store)
        self.before_decryption = partial(self.instance.exports(self.store)["_before_decryption"], self.store)

    def init_base_func(self):
        self.import_object = {
            "env": {
                "abort": Func(self.store, FuncType([ValType.i32()], []), self.abort),
                "enlargeMemory": Func(self.store, FuncType([], [ValType.i32()]), self.enlargeMemory),
                "getTotalMemory": Func(self.store, FuncType([], [ValType.i32()]), self.getTotalMemory),
                "abortOnCannotGrowMemory": Func(self.store, FuncType([], [ValType.i32()]), self.abortOnCannotGrowMemory),
                "invoke_dddi": Func(self.store, FuncType([ValType.i32(),ValType.f64(),ValType.f64(),ValType.i32()], [ValType.f64()]), self.invokedddi),
                "invoke_dii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.f64()]), self.invokedii),
                "invoke_diii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.f64()]), self.invokediii),
                "invoke_diiid": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64()], [ValType.f64()]), self.invokediiid),
                "invoke_diiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.f64()]), self.invokediiii),
                "invoke_ffffi": Func(self.store, FuncType([ValType.i32(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.i32()], [ValType.f64()]), self.invokeffffi),
                "invoke_fffi": Func(self.store, FuncType([ValType.i32(),ValType.f64(),ValType.f64(),ValType.i32()], [ValType.f64()]), self.invokefffi),
                "invoke_fi": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.f64()]), self.invokefi),
                "invoke_fii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.f64()]), self.invokefii),
                "invoke_fiifi": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32()], [ValType.f64()]), self.invokefiifi),
                "invoke_fiifii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32()], [ValType.f64()]), self.invokefiifii),
                "invoke_fiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.f64()]), self.invokefiii),
                "invoke_fiiif": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64()], [ValType.f64()]), self.invokefiiif),
                "invoke_fiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.f64()]), self.invokefiiii),
                "invoke_i": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.invokei),
                "invoke_ifi": Func(self.store, FuncType([ValType.i32(),ValType.f64(),ValType.i32()], [ValType.i32()]), self.invokeifi),
                "invoke_ii": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeii),
                "invoke_iifii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiifii),
                "invoke_iii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiii),
                "invoke_iiifi": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32()], [ValType.i32()]), self.invokeiiifi),
                "invoke_iiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiii),
                "invoke_iiiifii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiifii),
                "invoke_iiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiii),
                "invoke_iiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiiii),
                "invoke_iiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiiiii),
                "invoke_iiiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiiiiii),
                "invoke_iiiiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiiiiiii),
                "invoke_iiiiiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiiiiiiii),
                "invoke_iiiiiiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiiiiiiiii),
                "invoke_v": Func(self.store, FuncType([ValType.i32()], []), self.invokev),
                "invoke_vi": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.invokevi),
                "invoke_vidiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokevidiii),
                "invoke_vifffi": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.i32()], []), self.invokevifffi),
                "invoke_vifi": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32()], []), self.invokevifi),
                "invoke_vifii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32()], []), self.invokevifii),
                "invoke_vii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokevii),
                "invoke_viidi": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32()], []), self.invokeviidi),
                "invoke_viidii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32()], []), self.invokeviidii),
                "invoke_viiff": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.f64()], []), self.invokeviiff),
                "invoke_viiffi": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.f64(),ValType.i32()], []), self.invokeviiffi),
                "invoke_viifi": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32()], []), self.invokeviifi),
                "invoke_viifii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32()], []), self.invokeviifii),
                "invoke_viii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviii),
                "invoke_viiif": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64()], []), self.invokeviiif),
                "invoke_viiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiii),
                "invoke_viiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiiii),
                "invoke_viiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiiiii),
                "invoke_viiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiiiiii),
                "invoke_viiiiiiifddfii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.i32(),ValType.i32()], []), self.invokeviiiiiiifddfii),
                "invoke_viiiiiiiffffii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.i32(),ValType.i32()], []), self.invokeviiiiiiiffffii),
                "invoke_viiiiiiifiifii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32()], []), self.invokeviiiiiiifiifii),
                "invoke_viiiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiiiiiii),
                "invoke_viiiiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiiiiiiii),
                "invoke_viiiiiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiiiiiiiii),
                "_ES_AddEventHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.ESAddEventHandler),
                "_ES_Close": Func(self.store, FuncType([ValType.i32()], []), self.ESClose),
                "_ES_Create": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.ESCreate),
                "_ES_IsSupported": Func(self.store, FuncType([], [ValType.i32()]), self.ESIsSupported),
                "_ES_Release": Func(self.store, FuncType([ValType.i32()], []), self.ESRelease),
                "_GetInputFieldSelectionEnd": Func(self.store, FuncType([], [ValType.i32()]), self.GetInputFieldSelectionEnd),
                "_GetInputFieldSelectionStart": Func(self.store, FuncType([], [ValType.i32()]), self.GetInputFieldSelectionStart),
                "_GetInputFieldValue": Func(self.store, FuncType([], [ValType.i32()]), self.GetInputFieldValue),
                "_HideInputField": Func(self.store, FuncType([], []), self.HideInputField),
                "_IsInputFieldActive": Func(self.store, FuncType([], [ValType.i32()]), self.IsInputFieldActive),
                "_JS_Cursor_SetImage": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSCursorSetImage),
                "_JS_Cursor_SetShow": Func(self.store, FuncType([ValType.i32()], []), self.JSCursorSetShow),
                "_JS_Eval_ClearInterval": Func(self.store, FuncType([ValType.i32()], []), self.JSEvalClearInterval),
                "_JS_Eval_OpenURL": Func(self.store, FuncType([ValType.i32()], []), self.JSEvalOpenURL),
                "_JS_Eval_SetInterval": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSEvalSetInterval),
                "_JS_FileSystem_Initialize": Func(self.store, FuncType([], []), self.JSFileSystemInitialize),
                "_JS_FileSystem_Sync": Func(self.store, FuncType([], []), self.JSFileSystemSync),
                "_JS_Log_Dump": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSLogDump),
                "_JS_Log_StackTrace": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSLogStackTrace),
                "_JS_Sound_Create_Channel": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSoundCreateChannel),
                "_JS_Sound_GetLength": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSSoundGetLength),
                "_JS_Sound_GetLoadState": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSSoundGetLoadState),
                "_JS_Sound_Init": Func(self.store, FuncType([], []), self.JSSoundInit),
                "_JS_Sound_Load": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSoundLoad),
                "_JS_Sound_Load_PCM": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSoundLoadPCM),
                "_JS_Sound_Play": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.f64(),ValType.f64()], []), self.JSSoundPlay),
                "_JS_Sound_ReleaseInstance": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSSoundReleaseInstance),
                "_JS_Sound_ResumeIfNeeded": Func(self.store, FuncType([], []), self.JSSoundResumeIfNeeded),
                "_JS_Sound_Set3D": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSSoundSet3D),
                "_JS_Sound_SetListenerOrientation": Func(self.store, FuncType([ValType.f64(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.f64()], []), self.JSSoundSetListenerOrientation),
                "_JS_Sound_SetListenerPosition": Func(self.store, FuncType([ValType.f64(),ValType.f64(),ValType.f64()], []), self.JSSoundSetListenerPosition),
                "_JS_Sound_SetLoop": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSSoundSetLoop),
                "_JS_Sound_SetLoopPoints": Func(self.store, FuncType([ValType.i32(),ValType.f64(),ValType.f64()], []), self.JSSoundSetLoopPoints),
                "_JS_Sound_SetPaused": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSSoundSetPaused),
                "_JS_Sound_SetPitch": Func(self.store, FuncType([ValType.i32(),ValType.f64()], []), self.JSSoundSetPitch),
                "_JS_Sound_SetPosition": Func(self.store, FuncType([ValType.i32(),ValType.f64(),ValType.f64(),ValType.f64()], []), self.JSSoundSetPosition),
                "_JS_Sound_SetVolume": Func(self.store, FuncType([ValType.i32(),ValType.f64()], []), self.JSSoundSetVolume),
                "_JS_Sound_Stop": Func(self.store, FuncType([ValType.i32(),ValType.f64()], []), self.JSSoundStop),
                "_JS_SystemInfo_GetBrowserName": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSystemInfoGetBrowserName),
                "_JS_SystemInfo_GetBrowserVersionString": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSystemInfoGetBrowserVersionString),
                "_JS_SystemInfo_GetCanvasClientSize": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSSystemInfoGetCanvasClientSize),
                "_JS_SystemInfo_GetDocumentURL": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSystemInfoGetDocumentURL),
                "_JS_SystemInfo_GetGPUInfo": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSystemInfoGetGPUInfo),
                "_JS_SystemInfo_GetLanguage": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSystemInfoGetLanguage),
                "_JS_SystemInfo_GetMemory": Func(self.store, FuncType([], [ValType.i32()]), self.JSSystemInfoGetMemory),
                "_JS_SystemInfo_GetOS": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSystemInfoGetOS),
                "_JS_SystemInfo_GetPreferredDevicePixelRatio": Func(self.store, FuncType([], [ValType.f64()]), self.JSSystemInfoGetPreferredDevicePixelRatio),
                "_JS_SystemInfo_GetScreenSize": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSSystemInfoGetScreenSize),
                "_JS_SystemInfo_GetStreamingAssetsURL": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSSystemInfoGetStreamingAssetsURL),
                "_JS_SystemInfo_HasCursorLock": Func(self.store, FuncType([], [ValType.i32()]), self.JSSystemInfoHasCursorLock),
                "_JS_SystemInfo_HasFullscreen": Func(self.store, FuncType([], [ValType.i32()]), self.JSSystemInfoHasFullscreen),
                "_JS_SystemInfo_HasWebGL": Func(self.store, FuncType([], [ValType.i32()]), self.JSSystemInfoHasWebGL),
                "_JS_SystemInfo_IsMobile": Func(self.store, FuncType([], [ValType.i32()]), self.JSSystemInfoIsMobile),
                "_JS_Video_CanPlayFormat": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSVideoCanPlayFormat),
                "_JS_Video_Create": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSVideoCreate),
                "_JS_Video_Destroy": Func(self.store, FuncType([ValType.i32()], []), self.JSVideoDestroy),
                "_JS_Video_Duration": Func(self.store, FuncType([ValType.i32()], [ValType.f64()]), self.JSVideoDuration),
                "_JS_Video_EnableAudioTrack": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSVideoEnableAudioTrack),
                "_JS_Video_GetAudioLanguageCode": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSVideoGetAudioLanguageCode),
                "_JS_Video_GetNumAudioTracks": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSVideoGetNumAudioTracks),
                "_JS_Video_Height": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSVideoHeight),
                "_JS_Video_IsPlaying": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSVideoIsPlaying),
                "_JS_Video_IsReady": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSVideoIsReady),
                "_JS_Video_Pause": Func(self.store, FuncType([ValType.i32()], []), self.JSVideoPause),
                "_JS_Video_Play": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSVideoPlay),
                "_JS_Video_Seek": Func(self.store, FuncType([ValType.i32(),ValType.f64()], []), self.JSVideoSeek),
                "_JS_Video_SetEndedHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSVideoSetEndedHandler),
                "_JS_Video_SetErrorHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSVideoSetErrorHandler),
                "_JS_Video_SetLoop": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSVideoSetLoop),
                "_JS_Video_SetMute": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSVideoSetMute),
                "_JS_Video_SetPlaybackRate": Func(self.store, FuncType([ValType.i32(),ValType.f64()], []), self.JSVideoSetPlaybackRate),
                "_JS_Video_SetReadyHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSVideoSetReadyHandler),
                "_JS_Video_SetSeekedOnceHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSVideoSetSeekedOnceHandler),
                "_JS_Video_SetVolume": Func(self.store, FuncType([ValType.i32(),ValType.f64()], []), self.JSVideoSetVolume),
                "_JS_Video_Time": Func(self.store, FuncType([ValType.i32()], [ValType.f64()]), self.JSVideoTime),
                "_JS_Video_UpdateToTexture": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSVideoUpdateToTexture),
                "_JS_Video_Width": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSVideoWidth),
                "_JS_WebCamVideo_CanPlay": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSWebCamVideoCanPlay),
                "_JS_WebCamVideo_GetDeviceName": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSWebCamVideoGetDeviceName),
                "_JS_WebCamVideo_GetNativeHeight": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSWebCamVideoGetNativeHeight),
                "_JS_WebCamVideo_GetNativeWidth": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.JSWebCamVideoGetNativeWidth),
                "_JS_WebCamVideo_GetNumDevices": Func(self.store, FuncType([], [ValType.i32()]), self.JSWebCamVideoGetNumDevices),
                "_JS_WebCamVideo_GrabFrame": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSWebCamVideoGrabFrame),
                "_JS_WebCamVideo_Start": Func(self.store, FuncType([ValType.i32()], []), self.JSWebCamVideoStart),
                "_JS_WebCamVideo_Stop": Func(self.store, FuncType([ValType.i32()], []), self.JSWebCamVideoStop),
                "_JS_WebCam_IsSupported": Func(self.store, FuncType([], [ValType.i32()]), self.JSWebCamIsSupported),
                "_JS_WebRequest_Abort": Func(self.store, FuncType([ValType.i32()], []), self.JSWebRequestAbort),
                "_JS_WebRequest_Create": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSWebRequestCreate),
                "_JS_WebRequest_GetResponseHeaders": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.JSWebRequestGetResponseHeaders),
                "_JS_WebRequest_Release": Func(self.store, FuncType([ValType.i32()], []), self.JSWebRequestRelease),
                "_JS_WebRequest_Send": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSWebRequestSend),
                "_JS_WebRequest_SetProgressHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSWebRequestSetProgressHandler),
                "_JS_WebRequest_SetRequestHeader": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSWebRequestSetRequestHeader),
                "_JS_WebRequest_SetResponseHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.JSWebRequestSetResponseHandler),
                "_JS_WebRequest_SetTimeout": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.JSWebRequestSetTimeout),
                "_NativeCall": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.NativeCall),
                "_SetInputFieldSelection": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.SetInputFieldSelection),
                "_ShowInputField": Func(self.store, FuncType([ValType.i32()], []), self.ShowInputField),
                "_WS_Close": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.WSClose),
                "_WS_Create": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.WSCreate),
                "_WS_GetBufferedAmount": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.WSGetBufferedAmount),
                "_WS_GetState": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.WSGetState),
                "_WS_Release": Func(self.store, FuncType([ValType.i32()], []), self.WSRelease),
                "_WS_Send_Binary": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.WSSendBinary),
                "_WS_Send_String": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.WSSendString),
                "_XHR_Abort": Func(self.store, FuncType([ValType.i32()], []), self.XHRAbort),
                "_XHR_Create": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.XHRCreate),
                "_XHR_GetResponseHeaders": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.XHRGetResponseHeaders),
                "_XHR_GetStatusLine": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.XHRGetStatusLine),
                "_XHR_Release": Func(self.store, FuncType([ValType.i32()], []), self.XHRRelease),
                "_XHR_Send": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.XHRSend),
                "_XHR_SetLoglevel": Func(self.store, FuncType([ValType.i32()], []), self.XHRSetLoglevel),
                "_XHR_SetProgressHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.XHRSetProgressHandler),
                "_XHR_SetRequestHeader": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.XHRSetRequestHeader),
                "_XHR_SetResponseHandler": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.XHRSetResponseHandler),
                "_XHR_SetTimeout": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.XHRSetTimeout),
                "_buildEnvironment": Func(self.store, FuncType([ValType.i32()], []), self.buildEnvironment),
                "_cxa_allocate_exception": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.cxaallocateexception),
                "_cxa_begin_catch": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.cxabegincatch),
                "_cxa_end_catch": Func(self.store, FuncType([], []), self.cxaendcatch),
                "_cxa_find_matching_catch_2": Func(self.store, FuncType([], [ValType.i32()]), self.cxafindmatchingcatch2),
                "_cxa_find_matching_catch_3": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.cxafindmatchingcatch3),
                "_cxa_find_matching_catch_4": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.cxafindmatchingcatch4),
                "_cxa_free_exception": Func(self.store, FuncType([ValType.i32()], []), self.cxafreeexception),
                "_cxa_pure_virtual": Func(self.store, FuncType([], []), self.cxapurevirtual),
                "_cxa_rethrow": Func(self.store, FuncType([], []), self.cxarethrow),
                "_cxa_throw": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.cxathrow),
                "_lock": Func(self.store, FuncType([ValType.i32()], []), self.lock),
                "_map_file": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.mapfile),
                "_resumeException": Func(self.store, FuncType([ValType.i32()], []), self.resumeException),
                "_setErrNo": Func(self.store, FuncType([ValType.i32()], []), self.setErrNo),
                "_syscall10": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall10),
                "_syscall102": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall102),
                "_syscall122": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall122),
                "_syscall140": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall140),
                "_syscall142": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall142),
                "_syscall145": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall145),
                "_syscall146": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall146),
                "_syscall15": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall15),
                "_syscall168": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall168),
                "_syscall183": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall183),
                "_syscall192": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall192),
                "_syscall193": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall193),
                "_syscall194": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall194),
                "_syscall195": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall195),
                "_syscall196": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall196),
                "_syscall197": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall197),
                "_syscall199": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall199),
                "_syscall220": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall220),
                "_syscall221": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall221),
                "_syscall268": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall268),
                "_syscall3": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall3),
                "_syscall33": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall33),
                "_syscall38": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall38),
                "_syscall39": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall39),
                "_syscall4": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall4),
                "_syscall40": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall40),
                "_syscall42": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall42),
                "_syscall5": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall5),
                "_syscall54": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall54),
                "_syscall6": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall6),
                "_syscall63": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall63),
                "_syscall77": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall77),
                "_syscall85": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall85),
                "_syscall91": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.syscall91),
                "_unlock": Func(self.store, FuncType([ValType.i32()], []), self.unlock),
                "_abort": Func(self.store, FuncType([], []), self.abort),
                "_atexit": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.atexit),
                "_clock": Func(self.store, FuncType([], [ValType.i32()]), self.clock),
                "_clock_getres": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.clockgetres),
                "_clock_gettime": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.clockgettime),
                "_difftime": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.f64()]), self.difftime),
                "_dlclose": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.dlclose),
                "_dlopen": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.dlopen),
                "_dlsym": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.dlsym),
                "_emscripten_asm_const_i": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.emscriptenasmconsti),
                "_emscripten_asm_const_sync_on_main_thread_i": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.emscriptenasmconstsynconmainthreadi),
                "_emscripten_cancel_main_loop": Func(self.store, FuncType([], []), self.emscriptencancelmainloop),
                "_emscripten_exit_fullscreen": Func(self.store, FuncType([], [ValType.i32()]), self.emscriptenexitfullscreen),
                "_emscripten_exit_pointerlock": Func(self.store, FuncType([], [ValType.i32()]), self.emscriptenexitpointerlock),
                "_emscripten_get_canvas_element_size": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptengetcanvaselementsize),
                "_emscripten_get_fullscreen_status": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.emscriptengetfullscreenstatus),
                "_emscripten_get_gamepad_status": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptengetgamepadstatus),
                "_emscripten_get_main_loop_timing": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.emscriptengetmainlooptiming),
                "_emscripten_get_now": Func(self.store, FuncType([], [ValType.f64()]), self.emscriptengetnow),
                "_emscripten_get_num_gamepads": Func(self.store, FuncType([], [ValType.i32()]), self.emscriptengetnumgamepads),
                "_emscripten_has_threading_support": Func(self.store, FuncType([], [ValType.i32()]), self.emscriptenhasthreadingsupport),
                "_emscripten_html5_remove_all_event_listeners": Func(self.store, FuncType([], []), self.emscriptenhtml5removealleventlisteners),
                "_emscripten_is_webgl_context_lost": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.emscripteniswebglcontextlost),
                "_emscripten_log": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.emscriptenlog),
                "_emscripten_longjmp": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.emscriptenlongjmp),
                "_emscripten_memcpy_big": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptenmemcpybig),
                "_emscripten_num_logical_cores": Func(self.store, FuncType([], [ValType.i32()]), self.emscriptennumlogicalcores),
                "_emscripten_request_fullscreen": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptenrequestfullscreen),
                "_emscripten_request_pointerlock": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptenrequestpointerlock),
                "_emscripten_set_blur_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetblurcallbackonthread),
                "_emscripten_set_canvas_element_size": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetcanvaselementsize),
                "_emscripten_set_dblclick_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetdblclickcallbackonthread),
                "_emscripten_set_devicemotion_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetdevicemotioncallbackonthread),
                "_emscripten_set_deviceorientation_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetdeviceorientationcallbackonthread),
                "_emscripten_set_focus_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetfocuscallbackonthread),
                "_emscripten_set_fullscreenchange_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetfullscreenchangecallbackonthread),
                "_emscripten_set_gamepadconnected_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetgamepadconnectedcallbackonthread),
                "_emscripten_set_gamepaddisconnected_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetgamepaddisconnectedcallbackonthread),
                "_emscripten_set_keydown_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetkeydowncallbackonthread),
                "_emscripten_set_keypress_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetkeypresscallbackonthread),
                "_emscripten_set_keyup_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetkeyupcallbackonthread),
                "_emscripten_set_main_loop": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.emscriptensetmainloop),
                "_emscripten_set_main_loop_timing": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetmainlooptiming),
                "_emscripten_set_mousedown_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetmousedowncallbackonthread),
                "_emscripten_set_mousemove_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetmousemovecallbackonthread),
                "_emscripten_set_mouseup_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetmouseupcallbackonthread),
                "_emscripten_set_touchcancel_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensettouchcancelcallbackonthread),
                "_emscripten_set_touchend_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensettouchendcallbackonthread),
                "_emscripten_set_touchmove_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensettouchmovecallbackonthread),
                "_emscripten_set_touchstart_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensettouchstartcallbackonthread),
                "_emscripten_set_wheel_callback_on_thread": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptensetwheelcallbackonthread),
                "_emscripten_webgl_create_context": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptenwebglcreatecontext),
                "_emscripten_webgl_destroy_context": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.emscriptenwebgldestroycontext),
                "_emscripten_webgl_enable_extension": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.emscriptenwebglenableextension),
                "_emscripten_webgl_get_current_context": Func(self.store, FuncType([], [ValType.i32()]), self.emscriptenwebglgetcurrentcontext),
                "_emscripten_webgl_init_context_attributes": Func(self.store, FuncType([ValType.i32()], []), self.emscriptenwebglinitcontextattributes),
                "_emscripten_webgl_make_context_current": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.emscriptenwebglmakecontextcurrent),
                "_exit": Func(self.store, FuncType([ValType.i32()], []), self.exit),
                "_flock": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.flock),
                "_getaddrinfo": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.getaddrinfo),
                "_getenv": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.getenv),
                "_gethostbyaddr": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.gethostbyaddr),
                "_gethostbyname": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.gethostbyname),
                "_getnameinfo": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.getnameinfo),
                "_getpagesize": Func(self.store, FuncType([], [ValType.i32()]), self.getpagesize),
                "_getpwuid": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.getpwuid),
                "_gettimeofday": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.gettimeofday),
                "_glActiveTexture": Func(self.store, FuncType([ValType.i32()], []), self.glActiveTexture),
                "_glAttachShader": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glAttachShader),
                "_glBeginQuery": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glBeginQuery),
                "_glBeginTransformFeedback": Func(self.store, FuncType([ValType.i32()], []), self.glBeginTransformFeedback),
                "_glBindAttribLocation": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glBindAttribLocation),
                "_glBindBuffer": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glBindBuffer),
                "_glBindBufferBase": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glBindBufferBase),
                "_glBindBufferRange": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glBindBufferRange),
                "_glBindFramebuffer": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glBindFramebuffer),
                "_glBindRenderbuffer": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glBindRenderbuffer),
                "_glBindSampler": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glBindSampler),
                "_glBindTexture": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glBindTexture),
                "_glBindTransformFeedback": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glBindTransformFeedback),
                "_glBindVertexArray": Func(self.store, FuncType([ValType.i32()], []), self.glBindVertexArray),
                "_glBlendEquation": Func(self.store, FuncType([ValType.i32()], []), self.glBlendEquation),
                "_glBlendEquationSeparate": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glBlendEquationSeparate),
                "_glBlendFuncSeparate": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glBlendFuncSeparate),
                "_glBlitFramebuffer": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glBlitFramebuffer),
                "_glBufferData": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glBufferData),
                "_glBufferSubData": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glBufferSubData),
                "_glCheckFramebufferStatus": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.glCheckFramebufferStatus),
                "_glClear": Func(self.store, FuncType([ValType.i32()], []), self.glClear),
                "_glClearBufferfi": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32()], []), self.glClearBufferfi),
                "_glClearBufferfv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glClearBufferfv),
                "_glClearBufferuiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glClearBufferuiv),
                "_glClearColor": Func(self.store, FuncType([ValType.f64(),ValType.f64(),ValType.f64(),ValType.f64()], []), self.glClearColor),
                "_glClearDepthf": Func(self.store, FuncType([ValType.f64()], []), self.glClearDepthf),
                "_glClearStencil": Func(self.store, FuncType([ValType.i32()], []), self.glClearStencil),
                "_glColorMask": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glColorMask),
                "_glCompileShader": Func(self.store, FuncType([ValType.i32()], []), self.glCompileShader),
                "_glCompressedTexImage2D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glCompressedTexImage2D),
                "_glCompressedTexSubImage2D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glCompressedTexSubImage2D),
                "_glCompressedTexSubImage3D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glCompressedTexSubImage3D),
                "_glCopyBufferSubData": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glCopyBufferSubData),
                "_glCopyTexImage2D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glCopyTexImage2D),
                "_glCopyTexSubImage2D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glCopyTexSubImage2D),
                "_glCreateProgram": Func(self.store, FuncType([], [ValType.i32()]), self.glCreateProgram),
                "_glCreateShader": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.glCreateShader),
                "_glCullFace": Func(self.store, FuncType([ValType.i32()], []), self.glCullFace),
                "_glDeleteBuffers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDeleteBuffers),
                "_glDeleteFramebuffers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDeleteFramebuffers),
                "_glDeleteProgram": Func(self.store, FuncType([ValType.i32()], []), self.glDeleteProgram),
                "_glDeleteQueries": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDeleteQueries),
                "_glDeleteRenderbuffers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDeleteRenderbuffers),
                "_glDeleteSamplers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDeleteSamplers),
                "_glDeleteShader": Func(self.store, FuncType([ValType.i32()], []), self.glDeleteShader),
                "_glDeleteSync": Func(self.store, FuncType([ValType.i32()], []), self.glDeleteSync),
                "_glDeleteTextures": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDeleteTextures),
                "_glDeleteTransformFeedbacks": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDeleteTransformFeedbacks),
                "_glDeleteVertexArrays": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDeleteVertexArrays),
                "_glDepthFunc": Func(self.store, FuncType([ValType.i32()], []), self.glDepthFunc),
                "_glDepthMask": Func(self.store, FuncType([ValType.i32()], []), self.glDepthMask),
                "_glDetachShader": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDetachShader),
                "_glDisable": Func(self.store, FuncType([ValType.i32()], []), self.glDisable),
                "_glDisableVertexAttribArray": Func(self.store, FuncType([ValType.i32()], []), self.glDisableVertexAttribArray),
                "_glDrawArrays": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glDrawArrays),
                "_glDrawArraysInstanced": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glDrawArraysInstanced),
                "_glDrawBuffers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glDrawBuffers),
                "_glDrawElements": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glDrawElements),
                "_glDrawElementsInstanced": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glDrawElementsInstanced),
                "_glEnable": Func(self.store, FuncType([ValType.i32()], []), self.glEnable),
                "_glEnableVertexAttribArray": Func(self.store, FuncType([ValType.i32()], []), self.glEnableVertexAttribArray),
                "_glEndQuery": Func(self.store, FuncType([ValType.i32()], []), self.glEndQuery),
                "_glEndTransformFeedback": Func(self.store, FuncType([], []), self.glEndTransformFeedback),
                "_glFenceSync": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.glFenceSync),
                "_glFinish": Func(self.store, FuncType([], []), self.glFinish),
                "_glFlush": Func(self.store, FuncType([], []), self.glFlush),
                "_glFlushMappedBufferRange": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glFlushMappedBufferRange),
                "_glFramebufferRenderbuffer": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glFramebufferRenderbuffer),
                "_glFramebufferTexture2D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glFramebufferTexture2D),
                "_glFramebufferTextureLayer": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glFramebufferTextureLayer),
                "_glFrontFace": Func(self.store, FuncType([ValType.i32()], []), self.glFrontFace),
                "_glGenBuffers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGenBuffers),
                "_glGenFramebuffers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGenFramebuffers),
                "_glGenQueries": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGenQueries),
                "_glGenRenderbuffers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGenRenderbuffers),
                "_glGenSamplers": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGenSamplers),
                "_glGenTextures": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGenTextures),
                "_glGenTransformFeedbacks": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGenTransformFeedbacks),
                "_glGenVertexArrays": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGenVertexArrays),
                "_glGenerateMipmap": Func(self.store, FuncType([ValType.i32()], []), self.glGenerateMipmap),
                "_glGetActiveAttrib": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetActiveAttrib),
                "_glGetActiveUniform": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetActiveUniform),
                "_glGetActiveUniformBlockName": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetActiveUniformBlockName),
                "_glGetActiveUniformBlockiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetActiveUniformBlockiv),
                "_glGetActiveUniformsiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetActiveUniformsiv),
                "_glGetAttribLocation": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.glGetAttribLocation),
                "_glGetError": Func(self.store, FuncType([], [ValType.i32()]), self.glGetError),
                "_glGetFramebufferAttachmentParameteriv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetFramebufferAttachmentParameteriv),
                "_glGetIntegeri_v": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetIntegeriv),
                "_glGetIntegerv": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glGetIntegerv),
                "_glGetInternalformativ": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetInternalformativ),
                "_glGetProgramBinary": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetProgramBinary),
                "_glGetProgramInfoLog": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetProgramInfoLog),
                "_glGetProgramiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetProgramiv),
                "_glGetRenderbufferParameteriv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetRenderbufferParameteriv),
                "_glGetShaderInfoLog": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetShaderInfoLog),
                "_glGetShaderPrecisionFormat": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetShaderPrecisionFormat),
                "_glGetShaderSource": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetShaderSource),
                "_glGetShaderiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetShaderiv),
                "_glGetString": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.glGetString),
                "_glGetStringi": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.glGetStringi),
                "_glGetTexParameteriv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetTexParameteriv),
                "_glGetUniformBlockIndex": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.glGetUniformBlockIndex),
                "_glGetUniformIndices": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetUniformIndices),
                "_glGetUniformLocation": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.glGetUniformLocation),
                "_glGetUniformiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetUniformiv),
                "_glGetVertexAttribiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glGetVertexAttribiv),
                "_glInvalidateFramebuffer": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glInvalidateFramebuffer),
                "_glIsEnabled": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.glIsEnabled),
                "_glIsVertexArray": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.glIsVertexArray),
                "_glLinkProgram": Func(self.store, FuncType([ValType.i32()], []), self.glLinkProgram),
                "_glMapBufferRange": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.glMapBufferRange),
                "_glPixelStorei": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glPixelStorei),
                "_glPolygonOffset": Func(self.store, FuncType([ValType.f64(),ValType.f64()], []), self.glPolygonOffset),
                "_glProgramBinary": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glProgramBinary),
                "_glProgramParameteri": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glProgramParameteri),
                "_glReadBuffer": Func(self.store, FuncType([ValType.i32()], []), self.glReadBuffer),
                "_glReadPixels": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glReadPixels),
                "_glRenderbufferStorage": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glRenderbufferStorage),
                "_glRenderbufferStorageMultisample": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glRenderbufferStorageMultisample),
                "_glSamplerParameteri": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glSamplerParameteri),
                "_glScissor": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glScissor),
                "_glShaderSource": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glShaderSource),
                "_glStencilFuncSeparate": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glStencilFuncSeparate),
                "_glStencilMask": Func(self.store, FuncType([ValType.i32()], []), self.glStencilMask),
                "_glStencilOpSeparate": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glStencilOpSeparate),
                "_glTexImage2D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTexImage2D),
                "_glTexImage3D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTexImage3D),
                "_glTexParameterf": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.f64()], []), self.glTexParameterf),
                "_glTexParameteri": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTexParameteri),
                "_glTexParameteriv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTexParameteriv),
                "_glTexStorage2D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTexStorage2D),
                "_glTexStorage3D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTexStorage3D),
                "_glTexSubImage2D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTexSubImage2D),
                "_glTexSubImage3D": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTexSubImage3D),
                "_glTransformFeedbackVaryings": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glTransformFeedbackVaryings),
                "_glUniform1fv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform1fv),
                "_glUniform1i": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glUniform1i),
                "_glUniform1iv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform1iv),
                "_glUniform1uiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform1uiv),
                "_glUniform2fv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform2fv),
                "_glUniform2iv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform2iv),
                "_glUniform2uiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform2uiv),
                "_glUniform3fv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform3fv),
                "_glUniform3iv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform3iv),
                "_glUniform3uiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform3uiv),
                "_glUniform4fv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform4fv),
                "_glUniform4iv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform4iv),
                "_glUniform4uiv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniform4uiv),
                "_glUniformBlockBinding": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniformBlockBinding),
                "_glUniformMatrix3fv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniformMatrix3fv),
                "_glUniformMatrix4fv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glUniformMatrix4fv),
                "_glUnmapBuffer": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.glUnmapBuffer),
                "_glUseProgram": Func(self.store, FuncType([ValType.i32()], []), self.glUseProgram),
                "_glValidateProgram": Func(self.store, FuncType([ValType.i32()], []), self.glValidateProgram),
                "_glVertexAttrib4f": Func(self.store, FuncType([ValType.i32(),ValType.f64(),ValType.f64(),ValType.f64(),ValType.f64()], []), self.glVertexAttrib4f),
                "_glVertexAttrib4fv": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.glVertexAttrib4fv),
                "_glVertexAttribIPointer": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glVertexAttribIPointer),
                "_glVertexAttribPointer": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glVertexAttribPointer),
                "_glViewport": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.glViewport),
                "_gmtime": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.gmtime),
                "_inet_addr": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.inetaddr),
                "_llvm_eh_typeid_for": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.llvmehtypeidfor),
                "_llvm_exp2_f32": Func(self.store, FuncType([ValType.f64()], [ValType.f64()]), self.llvmexp2f32),
                "_llvm_log10_f32": Func(self.store, FuncType([ValType.f64()], [ValType.f64()]), self.llvmlog10f32),
                "_llvm_log10_f64": Func(self.store, FuncType([ValType.f64()], [ValType.f64()]), self.llvmlog10f64),
                "_llvm_log2_f32": Func(self.store, FuncType([ValType.f64()], [ValType.f64()]), self.llvmlog2f32),
                "_llvm_trap": Func(self.store, FuncType([], []), self.llvmtrap),
                "_llvm_trunc_f32": Func(self.store, FuncType([ValType.f64()], [ValType.f64()]), self.llvmtruncf32),
                "_localtime": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.localtime),
                "_longjmp": Func(self.store, FuncType([ValType.i32(),ValType.i32()], []), self.longjmp),
                "_mktime": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.mktime),
                "_pthread_cond_destroy": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.pthreadconddestroy),
                "_pthread_cond_init": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadcondinit),
                "_pthread_cond_timedwait": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadcondtimedwait),
                "_pthread_cond_wait": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadcondwait),
                "_pthread_getspecific": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.pthreadgetspecific),
                "_pthread_key_create": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadkeycreate),
                "_pthread_key_delete": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.pthreadkeydelete),
                "_pthread_mutex_destroy": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.pthreadmutexdestroy),
                "_pthread_mutex_init": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadmutexinit),
                "_pthread_mutexattr_destroy": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.pthreadmutexattrdestroy),
                "_pthread_mutexattr_init": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.pthreadmutexattrinit),
                "_pthread_mutexattr_setprotocol": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadmutexattrsetprotocol),
                "_pthread_mutexattr_settype": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadmutexattrsettype),
                "_pthread_once": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadonce),
                "_pthread_setspecific": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.pthreadsetspecific),
                "_sched_yield": Func(self.store, FuncType([], [ValType.i32()]), self.schedyield),
                "_setenv": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.setenv),
                "_sigaction": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.sigaction),
                "_sigemptyset": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.sigemptyset),
                "_strftime": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.strftime),
                "_sysconf": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.sysconf),
                "_time": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.time),
                "_unsetenv": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.unsetenv),
                "_utime": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.utime),
                "f64_rem": Func(self.store, FuncType([ValType.f64(),ValType.f64()], [ValType.f64()]), self.f64rem),
                "invoke_iiiiij": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiiij),
                "invoke_iiiijii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiijii),
                "invoke_iiiijjii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiijjii),
                "invoke_iiiji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiiji),
                "invoke_iiijiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiijiii),
                "invoke_iij": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiij),
                "invoke_iiji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiiji),
                "invoke_iijii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeiijii),
                "invoke_ijii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeijii),
                "invoke_j": Func(self.store, FuncType([ValType.i32()], [ValType.i32()]), self.invokej),
                "invoke_jdi": Func(self.store, FuncType([ValType.i32(),ValType.f64(),ValType.i32()], [ValType.i32()]), self.invokejdi),
                "invoke_ji": Func(self.store, FuncType([ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokeji),
                "invoke_jii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejii),
                "invoke_jiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejiii),
                "invoke_jiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejiiii),
                "invoke_jiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejiiiii),
                "invoke_jiiiiiiiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejiiiiiiiiii),
                "invoke_jiiij": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejiiij),
                "invoke_jiiji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejiiji),
                "invoke_jiji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejiji),
                "invoke_jijii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejijii),
                "invoke_jijiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejijiii),
                "invoke_jijj": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejijj),
                "invoke_jji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.invokejji),
                "invoke_viiiiiiifjjfii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.f64(),ValType.i32(),ValType.i32()], []), self.invokeviiiiiiifjjfii),
                "invoke_viiiijiiii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiiijiiii),
                "invoke_viiij": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiij),
                "invoke_viiiji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiiji),
                "invoke_viij": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviij),
                "invoke_viiji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviiji),
                "invoke_viijji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviijji),
                "invoke_viji": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokeviji),
                "invoke_vijii": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], []), self.invokevijii),
                "_atomic_fetch_add_8": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.atomicfetchadd8),
                "_glClientWaitSync": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32(),ValType.i32()], [ValType.i32()]), self.glClientWaitSync),
        }}
        
        if not 'test.wasm' in self.wasmfile:
            self.import_object['env'].update({"log": Func(self.store, FuncType([ValType.i32()], []), self.log),
                    "log2": Func(self.store, FuncType([ValType.i32(),ValType.i32(),ValType.i32()], []), self.log2),})

    def get_salt(self, regionhash):
        encoded_data = np.frombuffer(regionhash.encode('utf-8'), dtype=np.int8)
        size_of_encoded_data = len(encoded_data)

        encoded_data2 = np.zeros(2 * size_of_encoded_data, dtype=np.int8)
        encoded_data2[::2] = encoded_data  # P
        

        start_index = 1
        ALWAYS_ZERO = 0
        self.HEAP8[start_index : len(encoded_data2)+start_index] = encoded_data2
        output_index = 1000
        output_length = self.before_decryption(start_index, size_of_encoded_data, ALWAYS_ZERO)
        output_length = self.decryption(start_index, size_of_encoded_data, output_index, output_length, ALWAYS_ZERO)
        ret =  self.HEAP8[output_index: output_index+output_length]
        idx1, idx2 = np.where(ret == 46)[0][-2:]
        return ret[idx1: idx2+1].tolist()

    def buffer(self, dtype):
        return np.frombuffer(self.memory.get_buffer_ptr(self.store), dtype=dtype)
    
    @property
    def HEAP8(self):
        return self.buffer(np.int8)
    
    @property
    def HEAP16(self):
        return self.buffer(np.int16)
    
    @property
    def HEAP32(self):
        return self.buffer(np.int32)

    @property
    def HEAP64(self):
        return self.buffer(np.int64)
    
    @property
    def HEAPU8(self):
        return self.buffer(np.uint8)
    
    @property
    def HEAPU16(self):
        return self.buffer(np.uint16)

    @property
    def HEAPU32(self):
        return self.buffer(np.uint32)

    @property
    def HEAPF32(self):
        return self.buffer(np.float32)
    
    @property
    def HEAPF64(self):
        return self.buffer(np.float64)

